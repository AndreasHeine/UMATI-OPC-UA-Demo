[
    {
        "id": "44b167d3.5d3188",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "53cd820c08927f03",
        "type": "group",
        "z": "44b167d3.5d3188",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e9c7f25bddf4c167",
            "6ccf4e248c8eab88",
            "1c28099545d7ab92",
            "70c022ddb61c61b3",
            "859d210b50d203a4",
            "2693d1c45a502905",
            "5c137941f5b8ed2e",
            "a3f2a4fd281d277a",
            "8369fc155a2187d6"
        ],
        "x": 34,
        "y": 619,
        "w": 1012,
        "h": 202
    },
    {
        "id": "4d795342d3d0a8a3",
        "type": "group",
        "z": "44b167d3.5d3188",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7f864718456248a5",
            "56df6e6c8bc88b41",
            "9303b230c35329f5",
            "fb714196be82ddbd"
        ],
        "x": 34,
        "y": 239,
        "w": 792,
        "h": 82
    },
    {
        "id": "aea140a2210cb654",
        "type": "group",
        "z": "44b167d3.5d3188",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "8ebb5e1fd8009ed0",
            "e284863fe201626d",
            "317be299ea9203c5",
            "a258c7c279349105"
        ],
        "x": 44,
        "y": 99,
        "w": 782,
        "h": 82
    },
    {
        "id": "76c189cf4c737b20",
        "type": "group",
        "z": "44b167d3.5d3188",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "624f5ed5d95c0363",
            "2f8c29651c9a03b3",
            "64f434e5f6814720",
            "264202d200921c3d",
            "5d30097b3c6961e4",
            "abeec47eb859b6a8",
            "0654f7e5e114e5d2",
            "9350020966300ac0",
            "35813ce352e85c7a"
        ],
        "x": 34,
        "y": 399,
        "w": 672,
        "h": 162
    },
    {
        "id": "8ebb5e1fd8009ed0",
        "type": "OpcUa-Client2-Explore",
        "z": "44b167d3.5d3188",
        "g": "aea140a2210cb654",
        "inputs": 1,
        "output": 4,
        "name": "",
        "endpoint": "05260ca81c461b6e",
        "nodeId": "/machinery:Machines/own:MyControledMachine.di:Identification",
        "outputType": "Value",
        "excludeEmpty": true,
        "followOrganizes": true,
        "x": 360,
        "y": 140,
        "wires": [
            [
                "a258c7c279349105"
            ]
        ]
    },
    {
        "id": "e284863fe201626d",
        "type": "inject",
        "z": "44b167d3.5d3188",
        "g": "aea140a2210cb654",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "8ebb5e1fd8009ed0"
            ]
        ]
    },
    {
        "id": "e9c7f25bddf4c167",
        "type": "OpcUa-Client2-ExtensionObject",
        "z": "44b167d3.5d3188",
        "g": "53cd820c08927f03",
        "inputs": 1,
        "output": 1,
        "name": "Create JobOrder ExtensionObject",
        "endpoint": "05260ca81c461b6e",
        "dataType": "ISA95JobOrderDataType",
        "x": 580,
        "y": 660,
        "wires": [
            [
                "1c28099545d7ab92"
            ]
        ]
    },
    {
        "id": "6ccf4e248c8eab88",
        "type": "OpcUa-Client2-Call",
        "z": "44b167d3.5d3188",
        "g": "53cd820c08927f03",
        "inputs": 1,
        "output": 4,
        "name": "Call StoreAndStart",
        "endpoint": "05260ca81c461b6e",
        "action": "read",
        "methodId": "/machinery:Machines/own:MyControledMachine.machinery:MachineryBuildingBlocks.machineryJobs:JobManagement.machineryJobs:JobOrderControl.isa95JobControl:StoreAndStart",
        "objectId": "/machinery:Machines/own:MyControledMachine.machinery:MachineryBuildingBlocks.machineryJobs:JobManagement.machineryJobs:JobOrderControl",
        "x": 710,
        "y": 720,
        "wires": [
            [
                "8369fc155a2187d6"
            ],
            []
        ]
    },
    {
        "id": "1c28099545d7ab92",
        "type": "function",
        "z": "44b167d3.5d3188",
        "g": "53cd820c08927f03",
        "name": "Build Method args",
        "func": "\nmsg.payload={\n   \"JobOrder\": msg.payload,\n   \"Comment\": msg.comment\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 740,
        "wires": [
            [
                "2693d1c45a502905"
            ]
        ]
    },
    {
        "id": "7f864718456248a5",
        "type": "OpcUa-Client2-Monitor",
        "z": "44b167d3.5d3188",
        "g": "4d795342d3d0a8a3",
        "inputs": 0,
        "output": 2,
        "name": "MonitorJobOrderList",
        "endpoint": "05260ca81c461b6e",
        "subscription": "s0",
        "startImmediately": true,
        "nodeId": "/machinery:Machines/own:MyControledMachine.machinery:MachineryBuildingBlocks.machineryJobs:JobManagement.machineryJobs:JobOrderControl.isa95JobControl:JobOrderList",
        "samplingInterval": "0",
        "discardOldest": true,
        "queueSize": 10,
        "x": 150,
        "y": 280,
        "wires": [
            [
                "9303b230c35329f5"
            ]
        ]
    },
    {
        "id": "56df6e6c8bc88b41",
        "type": "ui-table",
        "z": "44b167d3.5d3188",
        "g": "4d795342d3d0a8a3",
        "group": "2e72b62e599dcc83",
        "name": "JobOrder Table",
        "label": "text",
        "order": 2,
        "width": 0,
        "height": 0,
        "maxrows": 0,
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "selectionType": "checkbox",
        "columns": [],
        "x": 540,
        "y": 280,
        "wires": [
            [
                "fb714196be82ddbd"
            ]
        ]
    },
    {
        "id": "9303b230c35329f5",
        "type": "function",
        "z": "44b167d3.5d3188",
        "g": "4d795342d3d0a8a3",
        "name": "Format for Table",
        "func": "const jobArray = msg.payload;\nconst table =[];\nfor(const j of jobArray) {\n  \n  const jobOrderId = j.JobOrder.JobOrderID;\n  const status = j.State[0]?.StateText;\n  const start = j.JobOrder.StartTime?.toISOString();\n  const end = j.JobOrder.EndTime?.toISOString();\n\n  table.push({jobOrderId,status,start,end});\n}\nmsg.payload = table;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 280,
        "wires": [
            [
                "56df6e6c8bc88b41"
            ]
        ]
    },
    {
        "id": "317be299ea9203c5",
        "type": "ui-table",
        "z": "44b167d3.5d3188",
        "g": "aea140a2210cb654",
        "group": "2e72b62e599dcc83",
        "name": "Idenfication table",
        "label": "text",
        "order": 1,
        "width": "6",
        "height": "2",
        "maxrows": 0,
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "selectionType": "none",
        "columns": [],
        "x": 710,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "70c022ddb61c61b3",
        "type": "function",
        "z": "44b167d3.5d3188",
        "g": "53cd820c08927f03",
        "name": "prepare Job",
        "func": "let counter = flow.get(\"counter\") || 0;\ncounter+=1;\nflow.set(\"counter\", counter);\n\nconst JobOrderID = `JOB${counter.toString().padStart(4,\"0\")}`;\n\nconst commentLines = (msg.payload?.Comment||\"\").split(\"\\n\");\nconst Description = [];\n\nfor(const l in commentLines ) {\n    break;\n    Description.push({ \n            Type: { Id: 21, Namespace:0},\n            Body: {\n                Text: l,\n                Locale: \"\"\n            }\n    });\n}\n\nconst Priority = msg.payload?.Priority || 1;\nmsg.shouldStart =  msg.payload.StoreAndStart === true;\n\nmsg.payload ={\n    JobOrderID,\n    Description,\n    Priority\n}\nmsg.comment = Description;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 660,
        "wires": [
            [
                "e9c7f25bddf4c167"
            ]
        ]
    },
    {
        "id": "859d210b50d203a4",
        "type": "ui-form",
        "z": "44b167d3.5d3188",
        "g": "53cd820c08927f03",
        "name": "",
        "group": "2e72b62e599dcc83",
        "label": "",
        "order": 6,
        "width": "2",
        "height": "3",
        "options": [
            {
                "label": "Comments",
                "key": "Comment",
                "type": "multiline",
                "required": false,
                "rows": 3
            },
            {
                "label": "Priority",
                "key": "Priority",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "StoreAndStart",
                "key": "StoreAndStart",
                "type": "checkbox",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "Comment": "",
            "Priority": "",
            "StoreAndStart": false
        },
        "payload": "",
        "submit": "SendJobOrder",
        "cancel": "clear",
        "resetOnSubmit": true,
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 130,
        "y": 660,
        "wires": [
            [
                "70c022ddb61c61b3"
            ]
        ]
    },
    {
        "id": "2693d1c45a502905",
        "type": "switch",
        "z": "44b167d3.5d3188",
        "g": "53cd820c08927f03",
        "name": "",
        "property": "shouldStart",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": true,
        "outputs": 2,
        "x": 520,
        "y": 740,
        "wires": [
            [
                "6ccf4e248c8eab88"
            ],
            [
                "5c137941f5b8ed2e"
            ]
        ]
    },
    {
        "id": "5c137941f5b8ed2e",
        "type": "OpcUa-Client2-Call",
        "z": "44b167d3.5d3188",
        "g": "53cd820c08927f03",
        "inputs": 1,
        "output": 4,
        "name": "Call Store",
        "endpoint": "05260ca81c461b6e",
        "action": "read",
        "methodId": "/machinery:Machines/own:MyControledMachine.machinery:MachineryBuildingBlocks.machineryJobs:JobManagement.machineryJobs:JobOrderControl.isa95JobControl:Store",
        "objectId": "/machinery:Machines/own:MyControledMachine.machinery:MachineryBuildingBlocks.machineryJobs:JobManagement.machineryJobs:JobOrderControl",
        "x": 680,
        "y": 780,
        "wires": [
            [
                "8369fc155a2187d6"
            ],
            []
        ]
    },
    {
        "id": "624f5ed5d95c0363",
        "type": "ui-button",
        "z": "44b167d3.5d3188",
        "g": "76c189cf4c737b20",
        "group": "2e72b62e599dcc83",
        "name": "Start",
        "label": "Start",
        "order": 3,
        "width": "2",
        "height": "1",
        "emulateClick": true,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "start",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 440,
        "wires": [
            [
                "264202d200921c3d"
            ]
        ]
    },
    {
        "id": "2f8c29651c9a03b3",
        "type": "ui-button",
        "z": "44b167d3.5d3188",
        "g": "76c189cf4c737b20",
        "group": "2e72b62e599dcc83",
        "name": "Abort",
        "label": "Abort",
        "order": 4,
        "width": "2",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 480,
        "wires": [
            [
                "abeec47eb859b6a8"
            ]
        ]
    },
    {
        "id": "64f434e5f6814720",
        "type": "ui-button",
        "z": "44b167d3.5d3188",
        "g": "76c189cf4c737b20",
        "group": "2e72b62e599dcc83",
        "name": "Clear",
        "label": "Clear",
        "order": 5,
        "width": "2",
        "height": "1",
        "emulateClick": true,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 520,
        "wires": [
            [
                "9350020966300ac0"
            ]
        ]
    },
    {
        "id": "a3f2a4fd281d277a",
        "type": "inject",
        "z": "44b167d3.5d3188",
        "g": "53cd820c08927f03",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Priority\":2,\"StoreAndStart\":true,\"Comment\":\"line1\\nline2\"}",
        "payloadType": "json",
        "x": 130,
        "y": 700,
        "wires": [
            [
                "70c022ddb61c61b3"
            ]
        ]
    },
    {
        "id": "fb714196be82ddbd",
        "type": "function",
        "z": "44b167d3.5d3188",
        "g": "4d795342d3d0a8a3",
        "name": "Store Selection",
        "func": "if (msg.action == \"multi_select\") {\n  const rows = RED.util.cloneMessage(msg.payload);\n  flow.set(\"selectedRows\", rows);\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "264202d200921c3d",
        "type": "function",
        "z": "44b167d3.5d3188",
        "g": "76c189cf4c737b20",
        "name": "Format Method Arguments",
        "func": "const rows = flow.get(\"selectedRows\");\nconst messages = [];\n\nfor (const row of rows) {\n    messages.push({\n        payload: {\n            JobOrderID: row.jobOrderId,\n            Comment: []\n        },\n        \n    });\n}\n\nreturn [[...messages]];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 440,
        "wires": [
            [
                "5d30097b3c6961e4"
            ]
        ]
    },
    {
        "id": "a258c7c279349105",
        "type": "function",
        "z": "44b167d3.5d3188",
        "g": "aea140a2210cb654",
        "name": "clean up",
        "func": "msg.payload.Manufacturer = msg.payload.Manufacturer?.text || \"\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 140,
        "wires": [
            [
                "317be299ea9203c5"
            ]
        ]
    },
    {
        "id": "5d30097b3c6961e4",
        "type": "OpcUa-Client2-Call",
        "z": "44b167d3.5d3188",
        "g": "76c189cf4c737b20",
        "inputs": 1,
        "output": 4,
        "name": "Call Start",
        "endpoint": "05260ca81c461b6e",
        "action": "read",
        "methodId": "/machinery:Machines/own:MyControledMachine.machinery:MachineryBuildingBlocks.machineryJobs:JobManagement.machineryJobs:JobOrderControl.isa95JobControl:Start",
        "objectId": "/machinery:Machines/own:MyControledMachine.machinery:MachineryBuildingBlocks.machineryJobs:JobManagement.machineryJobs:JobOrderControl",
        "x": 620,
        "y": 440,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "abeec47eb859b6a8",
        "type": "function",
        "z": "44b167d3.5d3188",
        "g": "76c189cf4c737b20",
        "name": "Format Method Arguments",
        "func": "const rows = flow.get(\"selectedRows\");\nconst messages = [];\n\nfor (const row of rows) {\n    messages.push({\n        payload: {\n            JobOrderID: row.jobOrderId,\n            Comment: []\n        },\n        \n    });\n}\n\nreturn [[...messages]];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 480,
        "wires": [
            [
                "0654f7e5e114e5d2"
            ]
        ]
    },
    {
        "id": "0654f7e5e114e5d2",
        "type": "OpcUa-Client2-Call",
        "z": "44b167d3.5d3188",
        "g": "76c189cf4c737b20",
        "inputs": 1,
        "output": 4,
        "name": "Call Abort",
        "endpoint": "05260ca81c461b6e",
        "action": "read",
        "methodId": "/machinery:Machines/own:MyControledMachine.machinery:MachineryBuildingBlocks.machineryJobs:JobManagement.machineryJobs:JobOrderControl.isa95JobControl:Abort",
        "objectId": "/machinery:Machines/own:MyControledMachine.machinery:MachineryBuildingBlocks.machineryJobs:JobManagement.machineryJobs:JobOrderControl",
        "x": 620,
        "y": 480,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "9350020966300ac0",
        "type": "function",
        "z": "44b167d3.5d3188",
        "g": "76c189cf4c737b20",
        "name": "Format Method Arguments",
        "func": "const rows = flow.get(\"selectedRows\");\nconst messages = [];\n\nfor (const row of rows) {\n    messages.push({\n        payload: {\n            JobOrderID: row.jobOrderId,\n            Comment: []\n        },\n        \n    });\n}\n\nreturn [[...messages]];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 520,
        "wires": [
            [
                "35813ce352e85c7a"
            ]
        ]
    },
    {
        "id": "35813ce352e85c7a",
        "type": "OpcUa-Client2-Call",
        "z": "44b167d3.5d3188",
        "g": "76c189cf4c737b20",
        "inputs": 1,
        "output": 4,
        "name": "Call Clear",
        "endpoint": "05260ca81c461b6e",
        "action": "read",
        "methodId": "/machinery:Machines/own:MyControledMachine.machinery:MachineryBuildingBlocks.machineryJobs:JobManagement.machineryJobs:JobOrderControl.isa95JobControl:Clear",
        "objectId": "/machinery:Machines/own:MyControledMachine.machinery:MachineryBuildingBlocks.machineryJobs:JobManagement.machineryJobs:JobOrderControl",
        "x": 620,
        "y": 520,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "bacd7289227e076e",
        "type": "comment",
        "z": "44b167d3.5d3188",
        "name": "Create JobOrder",
        "info": "",
        "x": 120,
        "y": 600,
        "wires": []
    },
    {
        "id": "8369fc155a2187d6",
        "type": "debug",
        "z": "44b167d3.5d3188",
        "g": "53cd820c08927f03",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 780,
        "wires": []
    },
    {
        "id": "b736875d33a97216",
        "type": "comment",
        "z": "44b167d3.5d3188",
        "name": "Extract Machine Identification (in one operation !)",
        "info": "This sequence reads the Identification variables of the machine\nand display it in a list on the UI",
        "x": 220,
        "y": 80,
        "wires": []
    },
    {
        "id": "547c9af37a313d76",
        "type": "comment",
        "z": "44b167d3.5d3188",
        "name": "List of Jobs",
        "info": "",
        "x": 110,
        "y": 220,
        "wires": []
    },
    {
        "id": "4323a00aa97369a2",
        "type": "comment",
        "z": "44b167d3.5d3188",
        "name": "Actions on List of Jobs selected rows",
        "info": "",
        "x": 180,
        "y": 380,
        "wires": []
    },
    {
        "id": "05260ca81c461b6e",
        "type": "OpcUa-Endpoint2",
        "name": "",
        "endpoint": "opc.tcp://opcuademo.sterfive.com:26543/UA/SampleServer",
        "securityMode": "None",
        "securityPolicy": "None",
        "userIdentityType": "Anonymous",
        "pkiName": "",
        "useTransport": false,
        "maxChunkCount": "1",
        "maxMessageSize": "8192",
        "receiveBufferSize": "8192",
        "sendBufferSize": "8192",
        "subscriptions": [
            {
                "id": "s0",
                "name": "Default Subscription",
                "isDefault": true,
                "parameters": {
                    "publishingEnabled": true,
                    "requestedLifetimeCount": "1000",
                    "requestedMaxKeepAliveCount": "10",
                    "requestedPublishingInterval": "1000",
                    "maxNotificationsPerPublish": "0",
                    "priority": "100"
                }
            },
            {
                "id": "s1",
                "name": "Slow Subscription",
                "isDefault": true,
                "parameters": {
                    "publishingEnabled": true,
                    "requestedLifetimeCount": "100",
                    "requestedMaxKeepAliveCount": "3",
                    "requestedPublishingInterval": "5000",
                    "maxNotificationsPerPublish": "100",
                    "priority": "10"
                }
            },
            {
                "id": "s2",
                "name": "Fast Subscription",
                "isDefault": true,
                "parameters": {
                    "publishingEnabled": true,
                    "requestedLifetimeCount": "4000",
                    "requestedMaxKeepAliveCount": "50",
                    "requestedPublishingInterval": "250",
                    "maxNotificationsPerPublish": "100",
                    "priority": "200"
                }
            }
        ],
        "namespaceAliases": [
            {
                "namespaceUri": "http://opcfoundation.org/UA/",
                "alias": "ua"
            },
            {
                "namespaceUri": "~urn:.*",
                "alias": "own"
            },
            {
                "namespaceUri": "http://opcfoundation.org/UA/DI/",
                "alias": "di"
            },
            {
                "namespaceUri": "http://opcfoundation.org/UA/ADI/",
                "alias": "adi"
            },
            {
                "namespaceUri": "http://opcfoundation.org/UA/AutoID/",
                "alias": "autoId"
            },
            {
                "namespaceUri": "http://opcfoundation.org/UA/MachineVision",
                "alias": "machineVision"
            },
            {
                "namespaceUri": "http://opcfoundation.org/UA/Robotics/",
                "alias": "robotics"
            },
            {
                "namespaceUri": "http://opcfoundation.org/UA/CommercialKitchenEquipment/",
                "alias": "cke"
            },
            {
                "namespaceUri": "http://opcfoundation.org/UA/ISA95-JOBCONTROL_V2/",
                "alias": "isa95JobControl"
            },
            {
                "namespaceUri": "http://opcfoundation.org/UA/Dictionary/IRDI",
                "alias": "irdi"
            },
            {
                "namespaceUri": "http://opcfoundation.org/UA/IA/",
                "alias": "ia"
            },
            {
                "namespaceUri": "http://opcfoundation.org/UA/Machinery/",
                "alias": "machinery"
            },
            {
                "namespaceUri": "http://opcfoundation.org/UA/Machinery/Jobs/",
                "alias": "machineryJobs"
            },
            {
                "namespaceUri": "http://opcfoundation.org/UA/MachineTool/",
                "alias": "machineTool"
            },
            {
                "namespaceUri": "http://opcfoundation.org/UA/PackML/",
                "alias": "packML"
            },
            {
                "namespaceUri": "urn://node-opcua-simulator",
                "alias": "ns2"
            },
            {
                "namespaceUri": "http://sterfive.com/UA/CoffeeMachine/",
                "alias": "ns3"
            }
        ]
    },
    {
        "id": "2e72b62e599dcc83",
        "type": "ui-group",
        "name": "JobManager",
        "page": "72c675db46ea859f",
        "width": "10",
        "height": "12",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "72c675db46ea859f",
        "type": "ui-page",
        "name": "Page 1",
        "ui": "80991d06c0a2d115",
        "path": "/page1",
        "icon": "home",
        "layout": "grid",
        "theme": "9a26b0f7e9fcb54c",
        "order": 1,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "80991d06c0a2d115",
        "type": "ui-base",
        "name": "My Dashboard",
        "path": "/dashboard",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "showPageTitle": true,
        "navigationStyle": "default",
        "titleBarStyle": "default"
    },
    {
        "id": "9a26b0f7e9fcb54c",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094CE",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    }
]